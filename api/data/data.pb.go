// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package dexter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExchangesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangesRequest) Reset()         { *m = ExchangesRequest{} }
func (m *ExchangesRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangesRequest) ProtoMessage()    {}
func (*ExchangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{0}
}

func (m *ExchangesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangesRequest.Unmarshal(m, b)
}
func (m *ExchangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangesRequest.Marshal(b, m, deterministic)
}
func (m *ExchangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangesRequest.Merge(m, src)
}
func (m *ExchangesRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangesRequest.Size(m)
}
func (m *ExchangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangesRequest proto.InternalMessageInfo

type ExchangesResponse struct {
	Exchanges            []string `protobuf:"bytes,1,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangesResponse) Reset()         { *m = ExchangesResponse{} }
func (m *ExchangesResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangesResponse) ProtoMessage()    {}
func (*ExchangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{1}
}

func (m *ExchangesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangesResponse.Unmarshal(m, b)
}
func (m *ExchangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangesResponse.Marshal(b, m, deterministic)
}
func (m *ExchangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangesResponse.Merge(m, src)
}
func (m *ExchangesResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangesResponse.Size(m)
}
func (m *ExchangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangesResponse proto.InternalMessageInfo

func (m *ExchangesResponse) GetExchanges() []string {
	if m != nil {
		return m.Exchanges
	}
	return nil
}

type MarketsRequest struct {
	Exchange             string   `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketsRequest) Reset()         { *m = MarketsRequest{} }
func (m *MarketsRequest) String() string { return proto.CompactTextString(m) }
func (*MarketsRequest) ProtoMessage()    {}
func (*MarketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{2}
}

func (m *MarketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsRequest.Unmarshal(m, b)
}
func (m *MarketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsRequest.Marshal(b, m, deterministic)
}
func (m *MarketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsRequest.Merge(m, src)
}
func (m *MarketsRequest) XXX_Size() int {
	return xxx_messageInfo_MarketsRequest.Size(m)
}
func (m *MarketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsRequest proto.InternalMessageInfo

func (m *MarketsRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

type MarketsResponse struct {
	Markets              []string `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketsResponse) Reset()         { *m = MarketsResponse{} }
func (m *MarketsResponse) String() string { return proto.CompactTextString(m) }
func (*MarketsResponse) ProtoMessage()    {}
func (*MarketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{3}
}

func (m *MarketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketsResponse.Unmarshal(m, b)
}
func (m *MarketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketsResponse.Marshal(b, m, deterministic)
}
func (m *MarketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketsResponse.Merge(m, src)
}
func (m *MarketsResponse) XXX_Size() int {
	return xxx_messageInfo_MarketsResponse.Size(m)
}
func (m *MarketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketsResponse proto.InternalMessageInfo

func (m *MarketsResponse) GetMarkets() []string {
	if m != nil {
		return m.Markets
	}
	return nil
}

type CandlesRequest struct {
	Exchange             string   `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Market               string   `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Timeframe            string   `protobuf:"bytes,3,opt,name=timeframe,proto3" json:"timeframe,omitempty"`
	Since                string   `protobuf:"bytes,4,opt,name=since,proto3" json:"since,omitempty"`
	Limit                uint64   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandlesRequest) Reset()         { *m = CandlesRequest{} }
func (m *CandlesRequest) String() string { return proto.CompactTextString(m) }
func (*CandlesRequest) ProtoMessage()    {}
func (*CandlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{4}
}

func (m *CandlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesRequest.Unmarshal(m, b)
}
func (m *CandlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesRequest.Marshal(b, m, deterministic)
}
func (m *CandlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesRequest.Merge(m, src)
}
func (m *CandlesRequest) XXX_Size() int {
	return xxx_messageInfo_CandlesRequest.Size(m)
}
func (m *CandlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesRequest proto.InternalMessageInfo

func (m *CandlesRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *CandlesRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *CandlesRequest) GetTimeframe() string {
	if m != nil {
		return m.Timeframe
	}
	return ""
}

func (m *CandlesRequest) GetSince() string {
	if m != nil {
		return m.Since
	}
	return ""
}

func (m *CandlesRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type CandlesResponse struct {
	Candles              []*Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CandlesResponse) Reset()         { *m = CandlesResponse{} }
func (m *CandlesResponse) String() string { return proto.CompactTextString(m) }
func (*CandlesResponse) ProtoMessage()    {}
func (*CandlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{5}
}

func (m *CandlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandlesResponse.Unmarshal(m, b)
}
func (m *CandlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandlesResponse.Marshal(b, m, deterministic)
}
func (m *CandlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandlesResponse.Merge(m, src)
}
func (m *CandlesResponse) XXX_Size() int {
	return xxx_messageInfo_CandlesResponse.Size(m)
}
func (m *CandlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CandlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CandlesResponse proto.InternalMessageInfo

func (m *CandlesResponse) GetCandles() []*Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type Candle struct {
	Timestamp            uint64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	O                    float64  `protobuf:"fixed64,2,opt,name=o,proto3" json:"o,omitempty"`
	H                    float64  `protobuf:"fixed64,3,opt,name=h,proto3" json:"h,omitempty"`
	L                    float64  `protobuf:"fixed64,4,opt,name=l,proto3" json:"l,omitempty"`
	C                    float64  `protobuf:"fixed64,5,opt,name=c,proto3" json:"c,omitempty"`
	V                    float64  `protobuf:"fixed64,6,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{6}
}

func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (m *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(m, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Candle) GetO() float64 {
	if m != nil {
		return m.O
	}
	return 0
}

func (m *Candle) GetH() float64 {
	if m != nil {
		return m.H
	}
	return 0
}

func (m *Candle) GetL() float64 {
	if m != nil {
		return m.L
	}
	return 0
}

func (m *Candle) GetC() float64 {
	if m != nil {
		return m.C
	}
	return 0
}

func (m *Candle) GetV() float64 {
	if m != nil {
		return m.V
	}
	return 0
}

type TestRequest struct {
	A                    string   `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{7}
}

func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (m *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(m, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

type TestResponse struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{8}
}

func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (m *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(m, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

func (m *TestResponse) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *TestResponse) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

func init() {
	proto.RegisterType((*ExchangesRequest)(nil), "dexter.ExchangesRequest")
	proto.RegisterType((*ExchangesResponse)(nil), "dexter.ExchangesResponse")
	proto.RegisterType((*MarketsRequest)(nil), "dexter.MarketsRequest")
	proto.RegisterType((*MarketsResponse)(nil), "dexter.MarketsResponse")
	proto.RegisterType((*CandlesRequest)(nil), "dexter.CandlesRequest")
	proto.RegisterType((*CandlesResponse)(nil), "dexter.CandlesResponse")
	proto.RegisterType((*Candle)(nil), "dexter.Candle")
	proto.RegisterType((*TestRequest)(nil), "dexter.TestRequest")
	proto.RegisterType((*TestResponse)(nil), "dexter.TestResponse")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor_871986018790d2fd) }

var fileDescriptor_871986018790d2fd = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x14, 0xec, 0xdb, 0x64, 0xb3, 0xf4, 0x6d, 0xe9, 0x2e, 0x16, 0x5a, 0x4c, 0xe1, 0x50, 0xf9, 0x14,
	0x01, 0xaa, 0xa0, 0x1c, 0x7b, 0xe0, 0x00, 0x15, 0x07, 0xc4, 0xc5, 0xe5, 0x0f, 0xb8, 0xc9, 0x83,
	0x46, 0xe4, 0x8b, 0xc4, 0xad, 0xfa, 0x2b, 0x38, 0xf3, 0x73, 0x51, 0xfc, 0x91, 0xd0, 0x82, 0xc4,
	0x1e, 0x67, 0xc6, 0x9e, 0xcc, 0xf3, 0x9b, 0x20, 0xa6, 0x4a, 0xab, 0x45, 0xdd, 0x54, 0xba, 0x62,
	0x51, 0x4a, 0x47, 0x4d, 0x8d, 0x60, 0x78, 0xbb, 0x3e, 0x26, 0x3b, 0x55, 0x7e, 0xa3, 0x56, 0xd2,
	0x8f, 0x3d, 0xb5, 0x5a, 0xbc, 0xc1, 0x47, 0x7f, 0x70, 0x6d, 0x5d, 0x95, 0x2d, 0xb1, 0xe7, 0x38,
	0x26, 0x4f, 0x72, 0x98, 0x07, 0xf1, 0x58, 0x0e, 0x84, 0x78, 0x85, 0xd3, 0xcf, 0xaa, 0xf9, 0x4e,
	0xda, 0x9b, 0xb0, 0x19, 0x3e, 0xf0, 0x32, 0x87, 0x39, 0xc4, 0x63, 0xd9, 0x63, 0xf1, 0x12, 0x6f,
	0xfa, 0xd3, 0xce, 0x9e, 0xe3, 0x55, 0x61, 0x29, 0x67, 0xee, 0xa1, 0xf8, 0x09, 0x38, 0x7d, 0xaf,
	0xca, 0x34, 0xa7, 0xfb, 0x78, 0xb3, 0x3b, 0x8c, 0xec, 0x4d, 0x7e, 0x61, 0x14, 0x87, 0xba, 0xfc,
	0x3a, 0x2b, 0xe8, 0x6b, 0xa3, 0x0a, 0xe2, 0x81, 0x91, 0x06, 0x82, 0x3d, 0xc6, 0xcb, 0x36, 0x2b,
	0x13, 0xe2, 0xa1, 0x51, 0x2c, 0xe8, 0xd8, 0x3c, 0x2b, 0x32, 0xcd, 0x2f, 0xe7, 0x10, 0x87, 0xd2,
	0x02, 0xb1, 0xc2, 0x9b, 0x3e, 0x8f, 0x4b, 0x1f, 0xe3, 0x55, 0x62, 0x29, 0x93, 0xfe, 0x7a, 0x39,
	0x5d, 0xd8, 0xf7, 0x5d, 0xd8, 0x93, 0xd2, 0xcb, 0x22, 0xc7, 0xc8, 0x52, 0x3e, 0x50, 0xab, 0x55,
	0x51, 0x9b, 0x29, 0x42, 0x39, 0x10, 0x6c, 0x82, 0x50, 0x99, 0x09, 0x40, 0x42, 0xd5, 0xa1, 0x9d,
	0x09, 0x0d, 0x12, 0x76, 0x1d, 0xca, 0x4d, 0x50, 0x90, 0x90, 0x77, 0x28, 0x31, 0x01, 0x41, 0x42,
	0xd2, 0xa1, 0x03, 0x8f, 0x2c, 0x3a, 0x88, 0x67, 0x78, 0xfd, 0x85, 0x5a, 0xed, 0xdf, 0x6d, 0x82,
	0xa0, 0xdc, 0x83, 0x81, 0x12, 0x2f, 0x70, 0x62, 0x45, 0x37, 0x44, 0xaf, 0x06, 0x12, 0x54, 0x87,
	0xb6, 0x26, 0x40, 0x20, 0x61, 0xbb, 0xfc, 0x75, 0x81, 0xe1, 0x07, 0xa5, 0x15, 0xfb, 0x84, 0x6c,
	0xb3, 0xaf, 0xeb, 0xaa, 0xd1, 0x94, 0xf6, 0x25, 0x61, 0xdc, 0x8f, 0x7b, 0xde, 0xa5, 0xd9, 0xd3,
	0x7f, 0x28, 0xf6, 0x7b, 0x62, 0xc4, 0xd6, 0x78, 0xdb, 0x9b, 0xb9, 0x42, 0xb0, 0x3b, 0x7f, 0xe1,
	0xb4, 0x4f, 0xb3, 0x27, 0x7f, 0xf1, 0xbd, 0xcd, 0x3b, 0xc4, 0x8f, 0xa4, 0xdd, 0x4e, 0x06, 0x83,
	0xd3, 0xd2, 0x0c, 0x06, 0x67, 0xcb, 0x13, 0x23, 0xb6, 0xc2, 0x87, 0x1b, 0xdd, 0x90, 0x2a, 0xfe,
	0xe7, 0x71, 0xb6, 0x56, 0x31, 0x7a, 0x0d, 0xdb, 0xc8, 0xfc, 0x50, 0x6f, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x8b, 0x71, 0x1a, 0x39, 0x5e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataClient is the client API for Data service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataClient interface {
	SupportedExchanges(ctx context.Context, in *ExchangesRequest, opts ...grpc.CallOption) (*ExchangesResponse, error)
	SupportedMarkets(ctx context.Context, in *MarketsRequest, opts ...grpc.CallOption) (*MarketsResponse, error)
	GetCandles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error)
	StreamCandles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (Data_StreamCandlesClient, error)
}

type dataClient struct {
	cc *grpc.ClientConn
}

func NewDataClient(cc *grpc.ClientConn) DataClient {
	return &dataClient{cc}
}

func (c *dataClient) SupportedExchanges(ctx context.Context, in *ExchangesRequest, opts ...grpc.CallOption) (*ExchangesResponse, error) {
	out := new(ExchangesResponse)
	err := c.cc.Invoke(ctx, "/dexter.Data/SupportedExchanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) SupportedMarkets(ctx context.Context, in *MarketsRequest, opts ...grpc.CallOption) (*MarketsResponse, error) {
	out := new(MarketsResponse)
	err := c.cc.Invoke(ctx, "/dexter.Data/SupportedMarkets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) GetCandles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (*CandlesResponse, error) {
	out := new(CandlesResponse)
	err := c.cc.Invoke(ctx, "/dexter.Data/GetCandles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) StreamCandles(ctx context.Context, in *CandlesRequest, opts ...grpc.CallOption) (Data_StreamCandlesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Data_serviceDesc.Streams[0], "/dexter.Data/StreamCandles", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataStreamCandlesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Data_StreamCandlesClient interface {
	Recv() (*Candle, error)
	grpc.ClientStream
}

type dataStreamCandlesClient struct {
	grpc.ClientStream
}

func (x *dataStreamCandlesClient) Recv() (*Candle, error) {
	m := new(Candle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataServer is the server API for Data service.
type DataServer interface {
	SupportedExchanges(context.Context, *ExchangesRequest) (*ExchangesResponse, error)
	SupportedMarkets(context.Context, *MarketsRequest) (*MarketsResponse, error)
	GetCandles(context.Context, *CandlesRequest) (*CandlesResponse, error)
	StreamCandles(*CandlesRequest, Data_StreamCandlesServer) error
}

func RegisterDataServer(s *grpc.Server, srv DataServer) {
	s.RegisterService(&_Data_serviceDesc, srv)
}

func _Data_SupportedExchanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).SupportedExchanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dexter.Data/SupportedExchanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).SupportedExchanges(ctx, req.(*ExchangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_SupportedMarkets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).SupportedMarkets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dexter.Data/SupportedMarkets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).SupportedMarkets(ctx, req.(*MarketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_GetCandles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).GetCandles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dexter.Data/GetCandles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).GetCandles(ctx, req.(*CandlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_StreamCandles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CandlesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataServer).StreamCandles(m, &dataStreamCandlesServer{stream})
}

type Data_StreamCandlesServer interface {
	Send(*Candle) error
	grpc.ServerStream
}

type dataStreamCandlesServer struct {
	grpc.ServerStream
}

func (x *dataStreamCandlesServer) Send(m *Candle) error {
	return x.ServerStream.SendMsg(m)
}

var _Data_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dexter.Data",
	HandlerType: (*DataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SupportedExchanges",
			Handler:    _Data_SupportedExchanges_Handler,
		},
		{
			MethodName: "SupportedMarkets",
			Handler:    _Data_SupportedMarkets_Handler,
		},
		{
			MethodName: "GetCandles",
			Handler:    _Data_GetCandles_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamCandles",
			Handler:       _Data_StreamCandles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "data.proto",
}
