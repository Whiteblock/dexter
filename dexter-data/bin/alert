#!/usr/bin/env node
const program = require('commander')
const pkg = require('../package')
const service = require('../dist/service').default
const alerts = require('../dist/alerts').default

const defaultBind = process.env.ALERT_SERVICE || '0.0.0.0:50052'

function connect(bind) {
  return alerts.getClient(bind)
}

function printResult(err, res) {
  if (err) {
    console.error(err)
  } else {
    console.log(JSON.stringify(res, null, 2))
  }
}

program
  .version(pkg.version)
  .option('-v, --verbose', 'Be verbose')
  .command('ls [id]')
  .action((id) => {
    const client = connect(defaultBind)
    if (id) {
      client.listAlerts({ external_id: id }, printResult)
    } else {
      client.listAlerts({}, printResult)
    }
  })

program
  .command('add <alert>')
  .action((alert) => {
    const client = connect(defaultBind)
    const p = alert.match(/^\//) ? alert : `${__dirname}/../{alert}`
    const a = require(p)
    client.createAlert(a, printResult)
  })

program
  .command('update <alert>')
  .action((alert) => {
    const client = connect(defaultBind)
    const p = alert.match(/^\//) ? alert : `${__dirname}/../{alert}`
    const a = require(p)
    client.updateAlert(a, printResult)
  })

program
  .command('get <id>')
  .action((id) => {
    const client = connect(defaultBind)
    client.getAlert({ alert_id: id }, printResult)
  })

program
  .command('rm <id>')
  .action((id) => {
    const client = connect(defaultBind)
    client.deleteAlert({ alert_id: id }, printResult)
  })

program
  .command('i')
  .action((id) => {
    const client = connect(defaultBind)
    client.listIndicators({ }, printResult)
  })

program
  .parse(process.argv)
